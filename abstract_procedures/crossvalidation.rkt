#lang racket
(require "../data/dataframe.rkt")
(provide (all-defined-out))
(define (cross_validation_split dataset n_folds)
  (let ((dataset_copy dataset)
        (fold_size (/ (length dataset) n_folds))
       )
       (repeat-n-folds n_folds dataset_copy fold_size)     
       
  )
)

(define (iter-folds fold_len folds data_copy)
                            (if (= fold_len 0)
                                (cons folds data_copy)
                                (let ((index (random (length data_copy))))
                                  (let ((data_copy (arr-remove data_copy index)))
                                    (iter-folds (- fold_len 1) (append folds data_copy) (data_copy))
                                  )
                                )       
                            )
)

(define (repeat-n-folds n_folds data_copy fold_size)
  (if (= n_folds 0)
      '()
      (let ((result (iter-folds fold_size '() data_copy)))
           (cons (car result) (repeat-n-folds (- n_folds 1) (cdr result) fold_size)))
  )
)